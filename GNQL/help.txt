================================================  GNQL   ================================================
=========================================================================================================
                         Calls to interface with GNQL (GreyNoise Query Language).
=========================================================================================================


>>>query=[your_query] /// GNQL (GreyNoise Query Language) is a domain-specific query language that uses Lucene deep under the hood. 
               |           GNQL aims to enable GreyNoise Enterprise and Research users to make complex and one-off queries against the 
               |          GreyNoise dataset as new business cases arise. GNQL is built with self-defeat and fully featured product lines in mind. 
               |          If we do our job correctly, each individual GNQL query that brings our users and customers sufficient value will eventually 
               |          be transitioned into it's own individual offering.
               |
               |          Example1: >>>query=first_seen:today
               |          Example2: >>>query=classification:malicious AND first_seen:today /// If you want to add more than one facet, then use ' AND ' between them.
               |          
         Extra Parameters
               |
               |--> size=[integer] /// Optional. Size parameter is the maximum amount of results to grab and can be used if you add &size=[int] after query parameter. 
                                                 That means if size=3,then it will give you three results (IPs).      
                                       
                                       Example: >>>query=first_seen:today&size=3                                         


>>>stats query=[your_query] /// Get aggregate statistics for the top organizations, actors, tags, ASNs, countries, classifications, and operating systems
                    |           of all the results of a given GNQL query.
                    |
                    |          Example1: >>>stats query=first_seen:today
                    |          Example2: >>>stats query=classification:malicious AND first_seen:today /// If you want to add more than one facet, then use ' AND ' between them. 
                    |
              Extra Parameters
                    |
                    |--> count=[integer] /// Optional. Number of top aggregates to grab

                                             Example: >>>stats query=first_seen:today&count=50000 





>>>ip_finder [www.host.xxx] /// If you do not know Host's IP, you can just type host's name, and the script will find it's IPs.


>>>examples [facent] /// Get examples of specific facet. Facets are ip: , tags: etc.
                           
                         Example1: >>>examples ip
                         Example2: >>>examples ip: /// Cause of autocomplete issues, I made this give the same result as Example1.
                         Example3: >>>examples -a actor /// Actors are splitted to Actors and Search Engines.
                                                         Search Engines also are called with actor:<search_engine_name> .
                                                         That means if you type 'examples actor' it will give you actors
                                                         without Search Engines,but if you add -a extender,it will print
                                                         all actors and Search Engines.
                                                         -a extender works only for actor and tags facet. If you type another
                                                         facet like 'ip', then it will show you results like you had not add
                                                         the extender.
                                                         
